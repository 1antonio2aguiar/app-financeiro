{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let FormFieldErrorComponent = /*#__PURE__*/(() => {\n  class FormFieldErrorComponent {\n    constructor() {}\n    ngOnInit() {}\n    get errorMessage() {\n      if (this.mustShowErrorMessage()) {\n        return this.getErrorMessage();\n      } else {\n        return null;\n      }\n    }\n    mustShowErrorMessage() {\n      return this.formControl.invalid && this.formControl.touched;\n    }\n    getErrorMessage() {\n      if (this.pattern != null && !this.formControl.value.match(this.pattern)) {\n        return this.headerName + ' Fora do Padrão';\n      } else if (this.formControl.errors.required) {\n        return this.headerName + ' Obrigatório';\n      } else if (this.formControl.errors.minlength) {\n        const requiredLength = this.formControl.errors.minlength.requiredLength;\n        return `Deve ter no mínimo ${requiredLength} caracteres`;\n      } else if (this.formControl.errors.maxlength) {\n        const requiredLength = this.formControl.errors.maxlength.requiredLength;\n        return `Deve ter no máximo ${requiredLength} caracteres`;\n      } else if (this.formControl.errors.email) {\n        return 'formato de email inválido';\n      }\n    }\n    static #_ = this.ɵfac = function FormFieldErrorComponent_Factory(t) {\n      return new (t || FormFieldErrorComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: FormFieldErrorComponent,\n      selectors: [[\"app-form-field-error\"]],\n      inputs: {\n        formControl: [i0.ɵɵInputFlags.None, \"form-control\", \"formControl\"],\n        headerName: [i0.ɵɵInputFlags.None, \"header-colum\", \"headerName\"],\n        pattern: \"pattern\"\n      },\n      decls: 2,\n      vars: 1,\n      consts: [[1, \"ui-messages-error\"]],\n      template: function FormFieldErrorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\", 0);\n          i0.ɵɵtext(1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", ctx.errorMessage, \" \");\n        }\n      },\n      styles: [\".ui-messages-error[_ngcontent-%COMP%]{margin:4px 0 0;color:red}\"]\n    });\n  }\n  return FormFieldErrorComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}