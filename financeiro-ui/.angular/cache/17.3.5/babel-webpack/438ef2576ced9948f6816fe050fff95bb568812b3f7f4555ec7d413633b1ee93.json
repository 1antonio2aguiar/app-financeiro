{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { MessageService } from 'primeng/api';\nimport { Component } from '@angular/core';\nimport { BaseResourceFormComponent } from '../../../shared/components/base-resource-form/base-resource-form.component';\nimport { Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nimport * as moment from 'moment';\nimport { Contratos } from 'src/app/shared/models/contratos';\nimport { TiposGruposFinanceirosModalComponent } from '../../tipos-grupos-financeiros/tipos-grupos-financeiros-modal/tipos-grupos-financeiros-modal.component';\nimport { PessoasModalComponent } from '../../tipos-grupos-financeiros/pessoas-modal/pessoas-modal.component';\nlet ContratosCadastroViewComponent = class ContratosCadastroViewComponent extends BaseResourceFormComponent {\n  constructor(contratosService, injector, dialogService, messageService) {\n    super(injector, new Contratos(), contratosService, Contratos.fromJson, new MessageService());\n    this.contratosService = contratosService;\n    this.injector = injector;\n    this.dialogService = dialogService;\n    this.messageService = messageService;\n    this.env = environment;\n    this.botaoOnOf = false;\n    this.maxDate = new Date();\n    this.isDisabledFild = false;\n    this.situacao = [{\n      value: 1,\n      selected: false,\n      label: 'ATIVO'\n    }, {\n      value: 2,\n      selected: false,\n      label: 'INATIVO'\n    }, {\n      value: 3,\n      selected: false,\n      label: 'PARALISADO'\n    }, {\n      value: 4,\n      selected: false,\n      label: 'SUSPENSO'\n    }, {\n      value: 5,\n      selected: false,\n      label: 'QUITADO'\n    }];\n    this.cpfcnpjmaskContratante = function () {\n      var numbers = document.getElementById('cpfCnpjContratante').value.match(/\\d/g);\n      var numberLength = 0;\n      if (numbers) {\n        numberLength = numbers.join('').length;\n      }\n      if (numberLength <= 11) {\n        return [/[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/];\n      } else {\n        return [/[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '/', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/];\n      }\n    };\n    this.cpfcnpjmaskContratado = function () {\n      var numbers = document.getElementById('cpfCnpjContratado').value.match(/\\d/g);\n      var numberLength = 0;\n      if (numbers) {\n        numberLength = numbers.join('').length;\n      }\n      if (numberLength <= 11) {\n        return [/[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/];\n      } else {\n        return [/[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '/', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/];\n      }\n    };\n    this.nroContratomask = function () {\n      var numbers = document.getElementById('numeroContrato').value.match(/\\d/g);\n      var numberLength = 0;\n      if (numbers) {\n        numberLength = numbers.join('').length;\n      }\n      if (numberLength <= 1) {\n        return [/[0-9]/];\n      }\n      if (numberLength <= 2) {\n        return [/[0-9]/, /[0-9]/];\n      }\n      if (numberLength <= 3) {\n        return [/[0-9]/, /[0-9]/, /[0-9]/];\n      }\n      if (numberLength <= 4) {\n        return [/[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/];\n      }\n      if (numberLength <= 5) {\n        return [/[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/];\n      }\n      if (numberLength <= 6) {\n        return [/[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/];\n      }\n      if (numberLength <= 7) {\n        return [/[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/];\n      }\n      if (numberLength <= 8) {\n        return [/[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/];\n      }\n      if (numberLength <= 9) {\n        return [/[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/];\n      }\n      if (numberLength <= 10) {\n        return [/[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/];\n      }\n    };\n    this.valorContratomask = function () {\n      var numbers = document.getElementById('valorContrato').value.match(/\\d/g);\n      var numberLength = 0;\n      if (numbers) {\n        numberLength = numbers.join('').length;\n      }\n      if (numberLength <= 2) {\n        return [',', /[0-9]/, /[0-9]/];\n      }\n      if (numberLength <= 3) {\n        return [/[0-9]/, ',', /[0-9]/, /[0-9]/];\n      }\n      if (numberLength <= 4) {\n        return [/[0-9]/, /[0-9]/, ',', /[0-9]/, /[0-9]/];\n      }\n      if (numberLength <= 5) {\n        return [/[0-9]/, /[0-9]/, /[0-9]/, ',', /[0-9]/, /[0-9]/];\n      }\n      if (numberLength <= 6) {\n        return [/[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, ',', /[0-9]/, /[0-9]/];\n      }\n      if (numberLength <= 7) {\n        return [/[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, ',', /[0-9]/, /[0-9]/];\n      }\n      if (numberLength <= 8) {\n        return [/[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, ',', /[0-9]/, /[0-9]/];\n      }\n      if (numberLength <= 9) {\n        return [/[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, ',', /[0-9]/, /[0-9]/];\n      }\n      if (numberLength <= 10) {\n        return [/[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, ',', /[0-9]/, /[0-9]/];\n      }\n      if (numberLength <= 11) {\n        return [/[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, ',', /[0-9]/, /[0-9]/];\n      }\n    };\n    this.ptBrLocale = this.loadLocale();\n  }\n  buildResourceForm() {\n    this.resourceForm = this.formBuilder.group({\n      id: [null],\n      numeroContrato: [null],\n      valorContrato: [null, [Validators.required]],\n      situacao: [1],\n      observacao: [null],\n      dataContrato: [null],\n      dataInicio: [null],\n      dataFim: [null],\n      usuario: [null],\n      tiposGruposFinanceiros: this.formBuilder.group({\n        id: [null],\n        descricao: [null],\n        gruposFinanceiros: this.formBuilder.group({\n          receitaDespesa: [null],\n          descricao: [null]\n        })\n      }),\n      pessoasContratante: this.formBuilder.group({\n        id: [null],\n        nome: [null],\n        cpfCnpj: [null]\n      }),\n      contratanteId: [null],\n      pessoasContratado: this.formBuilder.group({\n        id: [null],\n        nome: [null],\n        cpfCnpj: [null]\n      }),\n      contratadoId: [null]\n    });\n    this.resourceForm.patchValue({\n      usuario: JSON.parse(sessionStorage.getItem(\"usuario\")).nome\n    });\n  }\n  // Modal tipos grupos financeiros\n  showTiposGruposFinanceiros($event) {\n    const ref = this.dialogService.open(TiposGruposFinanceirosModalComponent, {\n      header: 'Selecione o tipo grupo financeiro',\n      width: '70%'\n    });\n    ref.onClose.subscribe(tiposGruposFinanceiros => {\n      this.resourceForm.patchValue({\n        tiposGruposFinanceiros: {\n          id: tiposGruposFinanceiros.id,\n          descricao: tiposGruposFinanceiros.descricao,\n          gruposFinanceiros: {\n            receitaDespesa: tiposGruposFinanceiros.gruposFinanceiros.receitaDespesa,\n            descricao: tiposGruposFinanceiros.gruposFinanceiros.descricao\n          }\n        }\n      });\n    });\n  }\n  // Modal pessoa contratante\n  showPessoaContratante($event) {\n    const ref = this.dialogService.open(PessoasModalComponent, {\n      header: 'Selecione o contratante',\n      width: '70%'\n    });\n    ref.onClose.subscribe(pessoasContratante => {\n      this.resourceForm.patchValue({\n        pessoasContratante: {\n          id: pessoasContratante.id,\n          nome: pessoasContratante.nome,\n          cpfCnpj: pessoasContratante.cpfCnpj\n        },\n        contratanteId: pessoasContratante.id\n      });\n    });\n  }\n  // Modal pessoa contratado\n  showPessoaContratado($event) {\n    const ref = this.dialogService.open(PessoasModalComponent, {\n      header: 'Selecione o contratado',\n      width: '70%'\n    });\n    ref.onClose.subscribe(pessoasContratado => {\n      this.resourceForm.patchValue({\n        pessoasContratado: {\n          id: pessoasContratado.id,\n          nome: pessoasContratado.nome,\n          cpfCnpj: pessoasContratado.cpfCnpj\n        },\n        contratadoId: pessoasContratado.id\n      });\n    });\n  }\n  creationPageTitle() {\n    this.botaoOnOf = false;\n    //console.log(\"passou aqui \")\n    return 'Novo Contrato';\n  }\n  editionPageTitle() {\n    this.env.tabPanelOnOff = false;\n    this.botaoOnOf = true;\n    this.isDisabledFild = false;\n    const stateFild = this.isDisabledFild ? 'disable' : 'enable';\n    return 'Editando Contrato: ';\n  }\n  submitForm() {\n    //this.submittingForm = true;\n    if (this.currentAction === 'new') {\n      // clicou no + (novo)\n      this.createResource();\n    } else {\n      // clicou no update\n      this.updateResource();\n    }\n  }\n  createResource() {\n    const replacer = function (key, value) {\n      if (key == \"numeroContrato\" || key == \"valorContrato\") {\n        let newValue = \"\";\n        for (var i = 0; i < value.length; i++) {\n          if (value[i] != '.') {\n            if (newValue == \"\") {\n              newValue = value[i];\n            } else {\n              if (value[i] == ',') {\n                newValue += '.';\n              } else {\n                newValue += value[i];\n              }\n            }\n          }\n        }\n        return newValue;\n      }\n      return value;\n    };\n    const resource = this.jsonDataToResourceFn(this.resourceForm.value);\n    // copia os dados de Contratos para contratos, que Ã© uma variavel que recebe os dados do form no tipo json\n    let contratos = JSON.stringify(resource, replacer);\n    // Chama a funcao que grava\n    this.contratosService.createContrato(contratos).then(response => {\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Sucesso',\n        detail: 'Contrato inserido com sucesso!'\n      });\n      // Move o id para contratos\n      this.resourceForm.patchValue({\n        id: response.id\n      });\n      this.env.tabPanelOnOff = false;\n      // redireciona para lista\n      /*const baseComponentPath = this.route.snapshot.parent.url[0].path;\n      this.router.navigateByUrl(baseComponentPath, { skipLocationChange: true }).then(() => {\n            console.log(this.router);\n            return this.router.navigate([\"/\" + baseComponentPath]);\n         });\n      }).\n      catch(error => {\n      console.log(error, 'Falhou a tentativa de inserir');\n      this.messageService.add({severity:'error', summary: 'Erro', detail:error.error[0].mensagemUsuario}); */\n    });\n  }\n  updateResource() {\n    // Logica para mudar a data registro de string para date mover para resourceform e mudar o formato.\n    const replacer = function (key, value) {\n      if (key == \"dataContrato\" || key == \"dataInicio\" || key == \"dataFim\") {\n        if (value != null) {\n          return moment(this[key], 'DD-MM-YYYY').format();\n        } else {\n          return null;\n        }\n      } else {\n        if (key == \"numeroContrato\" || key == \"valorContrato\") {\n          if (key == \"numeroContrato\") {\n            value = value.toString();\n          }\n          let newValue = \"\";\n          for (var i = 0; i < value.length; i++) {\n            if (value[i] != '.') {\n              if (newValue == \"\") {\n                newValue = value[i];\n              } else {\n                if (value[i] == ',') {\n                  newValue += '.';\n                } else {\n                  newValue += value[i];\n                }\n              }\n            }\n          }\n          return newValue;\n        }\n      }\n      return value;\n    };\n    // ate aqui.\n    const resource = this.jsonDataToResourceFn(this.resourceForm.value);\n    // copia os dados de Contratos(Entidade) para contratos(objeto do json)\n    let contratos = JSON.stringify(resource, replacer);\n    // Chama a funcao que grava/ faz update\n    this.contratosService.updateContrato(contratos).then(response => {\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Sucesso',\n        detail: 'Contrato atualizado com sucesso!'\n      });\n      // redireciona para lista\n      const baseComponentPath = this.route.snapshot.parent.url[0].path;\n      this.router.navigateByUrl(baseComponentPath, {\n        skipLocationChange: true\n      }).then(() => {\n        console.log(this.router);\n        return this.router.navigate([\"/\" + baseComponentPath]);\n      });\n    }).catch(error => {\n      console.log(error);\n      console.log('Falhou a tentativa de gravar');\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Erro',\n        detail: error.error[0].mensagemUsuario\n      });\n    });\n  }\n};\nContratosCadastroViewComponent = __decorate([Component({\n  selector: 'app-contratos-cadastro-view',\n  templateUrl: './contratos-cadastro-view.component.html',\n  styleUrls: ['./contratos-cadastro-view.component.css']\n})], ContratosCadastroViewComponent);\nexport { ContratosCadastroViewComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}