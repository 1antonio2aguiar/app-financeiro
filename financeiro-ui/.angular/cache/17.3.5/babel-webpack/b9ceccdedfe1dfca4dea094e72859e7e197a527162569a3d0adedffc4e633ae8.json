{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { MessageService } from 'primeng/api';\nimport { Component } from '@angular/core';\nimport { BaseResourceFormComponent } from '../../../shared/components/base-resource-form/base-resource-form.component';\nimport { Validators } from '@angular/forms';\nimport { Logradouros } from './../../../shared/models/logradouros';\nimport { CidadesModalComponent } from '../../cidades/cidades-modal/cidades-modal.component';\nlet LogradourosCadastroComponent = class LogradourosCadastroComponent extends BaseResourceFormComponent {\n  constructor(logradourosService, tiposLogradourosService, injector, dialogService, messageService) {\n    super(injector, new Logradouros(), logradourosService, Logradouros.fromJson, new MessageService());\n    this.logradourosService = logradourosService;\n    this.tiposLogradourosService = tiposLogradourosService;\n    this.injector = injector;\n    this.dialogService = dialogService;\n    this.messageService = messageService;\n    this.botaoOnOf = false;\n    this.loadTiposLogradouros();\n    this.ptBrLocale = this.loadLocale();\n  }\n  buildResourceForm() {\n    this.resourceForm = this.formBuilder.group({\n      id: [null],\n      tiposLogradourosId: [null, [Validators.required]],\n      cidadesId: [null, [Validators.required]],\n      nome: [null, [Validators.required, Validators.minLength(1)]],\n      observacao: [null],\n      cidades: this.formBuilder.group({\n        estados: this.formBuilder.group({\n          uf: [null]\n        }),\n        id: [null, [Validators.required]],\n        nome: [null]\n      })\n    });\n  }\n  creationPageTitle() {\n    this.botaoOnOf = false;\n    return 'Cadastro de Novo Logradouro';\n  }\n  editionPageTitle() {\n    const logradourosName = this.resource.nome || '';\n    this.botaoOnOf = true;\n    return 'Editando Logradouro: ';\n  }\n  loadTiposLogradouros() {\n    this.tiposLogradourosService.listAll().then(tiposLogradouros => {\n      this.tiposLogradourosList = tiposLogradouros.map(c => ({\n        label: c.descricao,\n        value: c.id\n      }));\n    }).catch(erro => erro);\n  }\n  // Modal Cidade/estado\n  showCidades($event) {\n    const ref = this.dialogService.open(CidadesModalComponent, {\n      header: 'Selecione a Cidade',\n      width: '70%'\n    });\n    ref.onClose.subscribe(cidade => {\n      //console.log(cidade);\n      this.resourceForm.patchValue({\n        cidades: {\n          id: cidade.id,\n          nome: cidade.nome,\n          estados: {\n            uf: cidade.estados.nome\n          }\n        },\n        cidadesId: cidade.id\n      });\n    });\n  }\n  createResource() {\n    const resource = Logradouros.toJson(this.resourceForm.value);\n    this.resourceService.create(resource).subscribe(result => {\n      this.actionsForSuccess(result);\n    }, error => this.actionsForError(error));\n  }\n  updateResource() {\n    const resource = Logradouros.toJson(this.resourceForm.value);\n    this.resourceService.update(resource).subscribe(resource => {\n      this.actionsForSuccess(resource);\n    }, error => this.actionsForError(error));\n  }\n};\nLogradourosCadastroComponent = __decorate([Component({\n  selector: 'app-logradouros-cadastro',\n  templateUrl: './logradouros-cadastro.component.html',\n  styleUrls: ['./logradouros-cadastro.component.css']\n})], LogradourosCadastroComponent);\nexport { LogradourosCadastroComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}