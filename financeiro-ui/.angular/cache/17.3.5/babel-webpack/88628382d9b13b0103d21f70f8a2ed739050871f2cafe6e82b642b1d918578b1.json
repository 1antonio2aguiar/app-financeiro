{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Output, EventEmitter } from '@angular/core';\nimport { BaseResourceFormComponent } from 'src/app/shared/components/base-resource-form/base-resource-form.component';\nimport { MessageService } from 'primeng/api';\nimport { Validators } from '@angular/forms';\nimport { DialogService } from 'primeng';\nimport * as moment from 'moment';\nimport { environment } from 'src/environments/environment';\nimport { Documentos } from './../../../../shared/models/documentos';\nlet DocumentosModalComponent = class DocumentosModalComponent extends BaseResourceFormComponent {\n  constructor(documentosService, injector, messageService, dialogService, ref) {\n    super(injector, new Documentos(), documentosService, Documentos.fromJson, new MessageService());\n    this.documentosService = documentosService;\n    this.injector = injector;\n    this.messageService = messageService;\n    this.dialogService = dialogService;\n    this.ref = ref;\n    // acho que isso e o gabriel que pos por conta do modal bloqueando tela\n    this.closeModalEvent = new EventEmitter();\n    this.env = environment;\n    this.documentoId = 0;\n    this.tipoDocumento = {\n      value: 0\n    };\n    this.maxDate = new Date();\n    this.cpfCnpj = '';\n    //Move os dados da pessoas para o modal de cadastro de enderecos\n    this.dadosPessoa = document.getElementById('nome').value + ' CPF: ' + document.getElementById('cpfCnpj').value;\n    this.tiposDocumentosList = [{\n      value: 'RG',\n      selected: false,\n      label: 'REGISTRO GERAL - RG'\n    }, {\n      value: 'CTPS',\n      selected: false,\n      label: 'CARTEIRA DE TRABALHO PROFISSIONAL'\n    }, {\n      value: 'CNH',\n      selected: false,\n      label: 'CARTEIRA NACIONAL DE HABILITAÇÃO'\n    }, {\n      value: 'RESERVISTA',\n      selected: false,\n      label: 'RESERVISTA'\n    }, {\n      value: 'PASSAPORTE',\n      selected: false,\n      label: 'PASSAPORTE'\n    }, {\n      value: 'TITELEITOR',\n      selected: false,\n      label: 'TÍTULO DE ELEITOR'\n    }, {\n      value: 'INSCRIMUNICIPAL',\n      selected: false,\n      label: 'INSCRIÇÃO MUNICIPAL'\n    }, {\n      value: 'OUTRO',\n      selected: false,\n      label: 'OUTRO'\n    }];\n    this.ptBrLocale = this.loadLocale();\n    this.buildResourceForm(); /*limpa o formulario/resourceForm */\n    if (this.env.currentActionGlobal != \"DELETE\") {\n      this.env.botaoOnOf = false;\n    } else {\n      this.env.botaoOnOf = true;\n    }\n  }\n  buildResourceForm() {\n    this.resourceForm = this.formBuilder.group({\n      id: [null],\n      pessoa: [document.getElementById('id').value],\n      tipoDocumento: [null, Validators.required],\n      numeroDocumento: [null, Validators.required],\n      dataDocumento: [null],\n      dataExpedicao: [null],\n      dataValidade: [null],\n      observacao: [null]\n    });\n  }\n  submitForm() {\n    //this.submittingForm = true;\n    if (this.env.currentActionGlobal === 'NEW') {\n      // clicou no + (novo)\n      this.createResource();\n    } else {\n      if (this.env.currentActionGlobal === 'EDIT') {\n        // clicou no update\n        this.updateResource();\n      } else {\n        // clicou no delete\n        this.deleteResource();\n      }\n    }\n  }\n  deleteResource() {\n    this.documentosService.deleteDocumento(this.documentoId).then(response => {\n      this.buildResourceForm(); /*limpa o formulario/resorceForm*/\n      this.ref.close();\n    });\n  }\n  updateResource() {\n    // Logica para mudar a data registro de string para date mover para resourceform e mudar o formato.\n    const replacer = function (key, value) {\n      if (key == \"dataDocumento\" && value != null) {\n        return moment(this[key], 'DD-MM-YYYY').format();\n      }\n      if (key == \"dataExpedicao\" && value != null) {\n        return moment(this[key], 'DD-MM-YYYY').format();\n      }\n      if (key == \"dataValidade\" && value != null) {\n        return moment(this[key], 'DD-MM-YYYY').format();\n      }\n      return value;\n    };\n    // ate aqui.\n    const resource = this.jsonDataToResourceFn(this.resourceForm.value);\n    // copia os dados de Documentos(classe) para Documentos(variavel json)\n    let documentos = JSON.stringify(resource, replacer);\n    // Chama a funcao que faz update\n    this.documentosService.updateDocumento(documentos).then(response => {\n      this.buildResourceForm(); /*limpa o formulario/resorceForm*/\n      this.ref.close();\n    });\n  }\n  createResource() {\n    const resource = this.jsonDataToResourceFn(this.resourceForm.value);\n    // copia os dados de Documentos(classe) para Documentos(variavel json)\n    let documentos = JSON.stringify(resource);\n    // Chama a funcao que insere\n    this.documentosService.createDocumento(documentos).then(response => {\n      this.buildResourceForm(); /*limpa o formulario/resorceForm*/\n      this.ref.close();\n    }).catch(error => {\n      console.log(error);\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Erro',\n        detail: error.error[0].mensagemUsuario\n      });\n    });\n  }\n  fecharModal() {\n    this.ref.close();\n  }\n  // No edit retorna os dados aqui.\n  ngOnInit() {\n    this.documentosService.documentosEditSubscribeId(resources => {\n      this.documentoId = resources.id;\n      this.resourceForm.patchValue({\n        id: resources.id,\n        tipoDocumento: resources.tipoDocumento,\n        numeroDocumento: resources.numeroDocumento,\n        dataDocumento: resources.dataDocumento,\n        dataExpedicao: resources.dataExpedicao,\n        dataValidade: resources.dataValidade,\n        observacao: resources.observacao\n      });\n    });\n    if (this.env.currentActionGlobal === \"DELETE\") {\n      document.getElementById('numeroDocumento').disabled = true;\n      document.getElementById('observacao').disabled = true;\n      //(<HTMLSelectElement>document.getElementById('dataDocumento')).disabled = true;\n      //(<HTMLSelectElement>document.getElementById('dataExpedicao')).disabled = true;\n      //(<HTMLSelectElement>document.getElementById('dataValidade')).disabled = true;\n    } else {\n      if (this.env.currentActionGlobal === \"EDIT\") {\n        this.env.botaoOnOf = true;\n      }\n    }\n  }\n};\n__decorate([Output()], DocumentosModalComponent.prototype, \"closeModalEvent\", void 0);\nDocumentosModalComponent = __decorate([Component({\n  selector: 'app-documentos-modal',\n  templateUrl: './documentos-modal.component.html',\n  styleUrls: ['./documentos-modal.component.css'],\n  // Isso aqui que resolve o problema de bloqueio de tela no modal\n  providers: [DialogService]\n})], DocumentosModalComponent);\nexport { DocumentosModalComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}