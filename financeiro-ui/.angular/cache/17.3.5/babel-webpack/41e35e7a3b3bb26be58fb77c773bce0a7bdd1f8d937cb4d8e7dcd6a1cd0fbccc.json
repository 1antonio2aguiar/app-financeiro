{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { MessageService } from 'primeng/api';\nimport { Component, Input } from '@angular/core';\nimport { BaseResourceFormComponent } from '../../../shared/components/base-resource-form/base-resource-form.component';\nimport { Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nimport { Pessoas } from './../../../shared/models/pessoas';\n//import { TiposPessoasService } from './../../tipos-pessoas/tipos-pessoas.service';\n//import { DistritosModalComponent } from './../../distritos/distritos-modal/distritos-modal.component';\nimport * as moment from 'moment';\nlet PessoasCadastroViewComponent = class PessoasCadastroViewComponent extends BaseResourceFormComponent {\n  constructor(pessoasService, injector, dialogService, messageService) {\n    super(injector, new Pessoas(), pessoasService, Pessoas.fromJson, new MessageService());\n    this.pessoasService = pessoasService;\n    this.injector = injector;\n    this.dialogService = dialogService;\n    this.messageService = messageService;\n    this.env = environment;\n    this.botaoOnOf = false;\n    this.maxDate = new Date();\n    this.isDisabledFild = true;\n    this.genero = [{\n      value: 'M',\n      selected: false,\n      label: 'MASCULINO'\n    }, {\n      value: 'F',\n      selected: false,\n      label: 'FEMININO'\n    }];\n    this.fisicaJuridica = [{\n      value: 'F',\n      selected: true,\n      label: 'FÍSICA'\n    }, {\n      value: 'J',\n      selected: false,\n      label: 'JURÍDICA'\n    }];\n    this.estadoCivil = [{\n      value: 'A',\n      selected: false,\n      label: 'AMAZIADO(A)'\n    }, {\n      value: 'C',\n      selected: false,\n      label: 'CASADO(A)'\n    }, {\n      value: 'S',\n      selected: false,\n      label: 'SOLTEIRO(A)'\n    }, {\n      value: 'U',\n      selected: false,\n      label: 'UNIÃO ESTÁVEL'\n    }, {\n      value: 'V',\n      selected: false,\n      label: 'VIUVO(A)'\n    }, {\n      value: 'O',\n      selected: false,\n      label: 'OUTRO'\n    }];\n    this.situacao = [{\n      value: 1,\n      selected: false,\n      label: 'ATIVO'\n    }, {\n      value: 2,\n      selected: false,\n      label: 'INATIVO'\n    }, {\n      value: 3,\n      selected: false,\n      label: 'PARALISADO'\n    }, {\n      value: 4,\n      selected: false,\n      label: 'SUSPENSO'\n    }];\n    this.cpfcnpjmask = function () {\n      var numbers = document.getElementById('cpfCnpj').value.match(/\\d/g);\n      var numberLength = 0;\n      if (numbers) {\n        numberLength = numbers.join('').length;\n      }\n      if (numberLength <= 11) {\n        return [/[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/];\n      } else {\n        return [/[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '/', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/];\n      }\n    };\n    this.ptBrLocale = this.loadLocale();\n  }\n  buildResourceForm() {\n    this.resourceForm = this.formBuilder.group({\n      id: [null],\n      nome: [null, [Validators.required, Validators.minLength(5)]],\n      fisicaJuridica: [null, Validators.required],\n      dataRegistro: [{\n        value: null,\n        disabled: this.isDisabledFild\n      }],\n      observacao: [null],\n      /*tiposPessoas:\n         this.formBuilder.group({\n         descricao:[null],\n         id: [null],\n      }),*/\n      cpfCnpj: [{\n        value: null,\n        disabled: this.isDisabledFild\n      }, Validators.required],\n      genero: [null],\n      estadoCivil: [null],\n      situacao: [1],\n      nomeFantasia: [{\n        value: null,\n        disabled: this.isDisabledFild\n      }],\n      objetoSocial: [{\n        value: null,\n        disabled: this.isDisabledFild\n      }],\n      tipoEmpresaId: [1]\n    });\n  }\n  onChange(event) {\n    this.isDisabledFild = false;\n    const stateFild = this.isDisabledFild ? 'disable' : 'enable';\n    this.validaEntradas(stateFild, event.value);\n    if (event.value == 'F') {\n      document.getElementById('nomeFantasia').disabled = true;\n      document.getElementById('objetoSocial').disabled = true;\n    } else {\n      // Desbloqueia\n      document.getElementById('nomeFantasia').disabled = false;\n      document.getElementById('objetoSocial').disabled = false;\n    }\n  }\n  creationPageTitle() {\n    this.env.botaoOnOf = true;\n    //console.log(\"passou aqui \")\n    return 'Novo Cadastro de Pessoa';\n  }\n  editionPageTitle() {\n    var numbers = document.getElementById('cpfCnpj').value.match(/\\d/g);\n    this.env.tabPanelOnOff = false;\n    this.env.botaoOnOf = true;\n    this.isDisabledFild = false;\n    const stateFild = this.isDisabledFild ? 'disable' : 'enable';\n    if (numbers != null) {\n      if (numbers.length == 11) {\n        this.validaEntradas(stateFild, \"F\");\n      } else {\n        this.validaEntradas(stateFild, \"J\");\n      }\n    }\n    return 'Editando Pessoas: ';\n  }\n  validaEntradas(stateFild, fisjur) {\n    if (fisjur == \"F\") {\n      Object.keys(this.resourceForm.controls).forEach(controlName => {\n        switch (controlName) {\n          case \"cpfCnpj\":\n            this.resourceForm.controls[controlName][stateFild]();\n            break;\n          case \"dataRegistro\":\n            this.resourceForm.controls[controlName][stateFild]();\n            break;\n        }\n      });\n    } else {\n      Object.keys(this.resourceForm.controls).forEach(controlName => {\n        switch (controlName) {\n          case \"cpfCnpj\":\n            this.resourceForm.controls[controlName][stateFild]();\n            break;\n          case \"dataRegistro\":\n            this.resourceForm.controls[controlName][stateFild]();\n            break;\n          case \"nomeFantasia\":\n            this.resourceForm.controls[controlName][stateFild]();\n            break;\n          case \"objetoSocial\":\n            this.resourceForm.controls[controlName][stateFild]();\n            break;\n        }\n      });\n    }\n  }\n  submitForm() {\n    //this.submittingForm = true;\n    if (this.currentAction === 'new') {\n      // clicou no + (novo)\n      this.createResource();\n    } else {\n      // clicou no update\n      this.updateResource();\n    }\n  }\n  updateResource() {\n    // Logica para mudar a data registro de string para date mover para resourceform e mudar o formato.\n    const replacer = function (key, value) {\n      if (key == \"dataRegistro\") {\n        return moment(this[key], 'DD-MM-YYYY').format();\n      }\n      return value;\n    };\n    // ate aqui.\n    const resource = this.jsonDataToResourceFn(this.resourceForm.value);\n    // copia os dados de Pessoas para pessoas\n    let pessoas = JSON.stringify(resource, replacer);\n    //console.log(\"Pessoas \", pessoas);\n    // Chama a funcao que grava/ faz update\n    this.pessoasService.updatePessoa(pessoas).then(response => {\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Sucesso',\n        detail: 'Pessoa atualizada com sucesso!'\n      });\n      // redireciona para lista\n      const baseComponentPath = this.route.snapshot.parent.url[0].path;\n      this.router.navigateByUrl(baseComponentPath, {\n        skipLocationChange: true\n      }).then(() => {\n        console.log(this.router);\n        return this.router.navigate([\"/\" + baseComponentPath]);\n      });\n    }).catch(error => {\n      console.log(error);\n      console.log('Falhou a tentativa de gravar');\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Erro',\n        detail: error.error[0].mensagemUsuario\n      });\n    });\n  }\n  createResource() {\n    const resource = this.jsonDataToResourceFn(this.resourceForm.value);\n    // copia os dados de Pessoas para pessoas\n    let pessoas = JSON.stringify(resource /*,replacer*/);\n    // Chama a funcao que grava\n    this.pessoasService.createPessoa(pessoas).then(response => {\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Sucesso',\n        detail: 'Pessoa inserida com sucesso!'\n      });\n      // Move o id para pessoas\n      this.resourceForm.patchValue({\n        id: response.id\n      });\n      this.env.tabPanelOnOff = false;\n      // redireciona para lista\n      /*const baseComponentPath = this.route.snapshot.parent.url[0].path;\n      this.router.navigateByUrl(baseComponentPath, { skipLocationChange: true }).then(() => {\n            console.log(this.router);\n            return this.router.navigate([\"/\" + baseComponentPath]);\n         });\n      }).\n      catch(error => {\n      console.log(error, 'Falhou a tentativa de inserir');\n      this.messageService.add({severity:'error', summary: 'Erro', detail:error.error[0].mensagemUsuario}); */\n    });\n  }\n};\n__decorate([Input()], PessoasCadastroViewComponent.prototype, \"pessoaId\", void 0);\nPessoasCadastroViewComponent = __decorate([Component({\n  selector: 'app-pessoas-cadastro-view',\n  templateUrl: './pessoas-cadastro-view.component.html',\n  styleUrls: ['./pessoas-cadastro-view.component.css']\n})], PessoasCadastroViewComponent);\nexport { PessoasCadastroViewComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}