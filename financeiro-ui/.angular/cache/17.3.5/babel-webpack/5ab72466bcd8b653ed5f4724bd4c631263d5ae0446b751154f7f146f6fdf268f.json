{"ast":null,"code":"import { BaseResourceFormComponent } from \"../../../shared/components/base-resource-form/base-resource-form.component\";\nimport { Validators } from \"@angular/forms\";\nimport { Cidades } from \"./../../../shared/models/cidades\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../cidades.service\";\nimport * as i2 from \"./../../estados/estados.service\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"../../../shared/components/bread-crumb/bread-crumb.component\";\nimport * as i7 from \"../../../shared/components/form-field-error/form-field-error.component\";\nimport * as i8 from \"primeng/button\";\nimport * as i9 from \"primeng/inputtext\";\nimport * as i10 from \"primeng/panel\";\nimport * as i11 from \"primeng/dropdown\";\nconst _c0 = () => ({\n  label: \"Cidades\",\n  routerLink: \"/cidades\"\n});\nconst _c1 = a0 => ({\n  label: a0\n});\nconst _c2 = (a0, a1) => [a0, a1];\nexport let CidadesCadastroComponent = /*#__PURE__*/(() => {\n  class CidadesCadastroComponent extends BaseResourceFormComponent {\n    constructor(cidadesService, estadosService, injector, messageService) {\n      super(injector, new Cidades(), cidadesService, Cidades.fromJson, messageService);\n      this.cidadesService = cidadesService;\n      this.estadosService = estadosService;\n      this.injector = injector;\n      this.messageService = messageService;\n      this.estadosList = [];\n      this.loadEstados();\n    }\n    buildResourceForm() {\n      this.resourceForm = this.formBuilder.group({\n        id: [null],\n        nome: [null, [Validators.required, Validators.minLength(5)]],\n        uf: [null],\n        estadosId: [null]\n      });\n    }\n    creationPageTitle() {\n      return \"Cadastro de Nova Cidade\";\n    }\n    editionPageTitle() {\n      const cidadesName = this.resource.nome;\n      return \"Editando Cidade: \" + cidadesName;\n    }\n    loadEstados() {\n      this.estadosService.listAll().then(estados => {\n        this.estadosList = estados.map(c => ({\n          label: c.nome + ' - ' + c.uf,\n          value: c.id\n        }));\n      }).catch(erro => erro);\n    }\n    /*numberOnly(event): boolean {\n       const charCode = event.which ? event.which : event.keyCode;\n       if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n          return false;\n       }\n       return true;\n    }*/\n    createResource() {\n      const resource = Cidades.toJson(this.resourceForm.value);\n      this.resourceService.create(resource)\n      // tslint:disable-next-line:no-shadowed-variable\n      .subscribe(result => {\n        this.actionsForSuccess(result);\n      }, error => this.actionsForError(error));\n    }\n    updateResource() {\n      const resource = Cidades.toJson(this.resourceForm.value);\n      this.resourceService.update(resource).subscribe(\n      // tslint:disable-next-line:no-shadowed-variable\n      resource => {\n        this.actionsForSuccess(resource);\n      }, error => this.actionsForError(error));\n    }\n    static #_ = this.ɵfac = function CidadesCadastroComponent_Factory(t) {\n      return new (t || CidadesCadastroComponent)(i0.ɵɵdirectiveInject(i1.CidadesService), i0.ɵɵdirectiveInject(i2.EstadosService), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i3.MessageService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CidadesCadastroComponent,\n      selectors: [[\"app-cidades-cadastro\"]],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 19,\n      vars: 12,\n      consts: [[3, \"items\"], [1, \"margin\"], [\"header\", \"Preencha o Formulario:\"], [3, \"submit\", \"formGroup\"], [1, \"p-grid\", \"ui-fluid\", 2, \"margin-top\", \"5px\"], [1, \"p-col-12\", \"p-md-6\", \"p-lg-6\"], [\"for\", \"nome\"], [\"id\", \"nome\", \"type\", \"text\", \"size\", \"50\", \"pInputText\", \"\", \"formControlName\", \"nome\"], [\"header-colum\", \"Nome\", 3, \"form-control\"], [1, \"p-col-12\", \"p-md-2\", \"p-lg-2\"], [\"for\", \"estado\"], [\"id\", \"estado\", \"name\", \"estado\", \"placeholder\", \"Selecione\", \"formControlName\", \"estadosId\", 3, \"options\", \"filter\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Voltar\", \"routerLink\", \"/cidades\", 1, \"ui-button-danger\"], [\"pButton\", \"\", \"type\", \"button\", \"type\", \"submit\", \"icon\", \"pi pi-check\", \"label\", \"Salvar\", 1, \"ui-button-success\", 3, \"disabled\"]],\n      template: function CidadesCadastroComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"app-bread-crumb\", 0);\n          i0.ɵɵelementStart(1, \"div\", 1)(2, \"p-panel\", 2)(3, \"form\", 3);\n          i0.ɵɵlistener(\"submit\", function CidadesCadastroComponent_Template_form_submit_3_listener() {\n            return ctx.submitForm();\n          });\n          i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"label\", 6);\n          i0.ɵɵtext(7, \"Nome\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"input\", 7)(9, \"app-form-field-error\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\", 9)(11, \"label\", 10);\n          i0.ɵɵtext(12, \"Estado\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"p-dropdown\", 11);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"div\", 4)(15, \"div\", 9);\n          i0.ɵɵelement(16, \"button\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"div\", 9);\n          i0.ɵɵelement(18, \"button\", 13);\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"items\", i0.ɵɵpureFunction2(9, _c2, i0.ɵɵpureFunction0(6, _c0), i0.ɵɵpureFunction1(7, _c1, ctx.pageTitle)));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.resourceForm);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"form-control\", ctx.resourceForm.get(\"nome\"));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"options\", ctx.estadosList)(\"filter\", true);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"disabled\", ctx.submittingForm || ctx.resourceForm.invalid);\n        }\n      },\n      dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i5.RouterLink, i6.BreadCrumbComponent, i7.FormFieldErrorComponent, i8.ButtonDirective, i9.InputText, i10.Panel, i11.Dropdown]\n    });\n  }\n  return CidadesCadastroComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}