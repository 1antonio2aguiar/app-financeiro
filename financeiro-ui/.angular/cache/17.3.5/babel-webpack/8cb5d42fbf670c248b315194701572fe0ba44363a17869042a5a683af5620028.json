{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { BaseResourceService } from './../../shared/services/base-resource.service';\nimport { environment } from 'src/environments/environment';\nimport { Ceps } from 'src/app/shared/models/ceps';\nimport * as i0 from \"@angular/core\";\nexport let CepsService = /*#__PURE__*/(() => {\n  class CepsService extends BaseResourceService {\n    constructor(injector) {\n      super(environment.apiUrl + 'ceps', injector, Ceps.fromJson);\n      this.injector = injector;\n      this.header = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n    }\n    pesquisar(filtro) {\n      let params = filtro.params;\n      params = params.append('page', filtro.pagina.toString()).append('size', filtro.itensPorPagina.toString());\n      return this.http.get(this.apiPath, {\n        params\n      }).toPromise().then(response => {\n        const ceps = response.content;\n        const resultado = {\n          ceps,\n          total: response.totalElements\n        };\n        return resultado;\n      });\n    }\n    listAll() {\n      return this.http.get(this.apiPath + '/').toPromise().then(response => response.content);\n    }\n    createCep(resource) {\n      return this.http.post(this.apiPath, resource, {\n        headers: this.header\n      }).toPromise().then(response => response);\n    }\n    updateCep(resource) {\n      return this.http.put(this.apiPath + '/' + JSON.parse(resource).id, resource, {\n        headers: this.header\n      }).toPromise().then(response => response);\n    }\n    static #_ = this.ɵfac = function CepsService_Factory(t) {\n      return new (t || CepsService)(i0.ɵɵinject(i0.Injector));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CepsService,\n      factory: CepsService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return CepsService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}