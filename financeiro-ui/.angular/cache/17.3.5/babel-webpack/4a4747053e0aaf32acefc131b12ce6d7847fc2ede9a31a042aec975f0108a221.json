{"ast":null,"code":"import { BaseResourceFormComponent } from 'src/app/shared/components/base-resource-form/base-resource-form.component';\nimport { MessageService } from 'primeng/api';\nimport { Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nimport { Contatos } from 'src/app/shared/models/contatos';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../contatos.service\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"primeng/dynamicdialog\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../../../../shared/components/form-field-error/form-field-error.component\";\nimport * as i7 from \"primeng/button\";\nimport * as i8 from \"primeng/inputtext\";\nimport * as i9 from \"primeng/panel\";\nimport * as i10 from \"primeng/dropdown\";\nfunction ContatosModalComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"button\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.submittingForm || ctx_r0.resourceForm.invalid);\n  }\n}\nfunction ContatosModalComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"button\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.submittingForm || ctx_r0.resourceForm.invalid);\n  }\n}\nexport let ContatosModalComponent = /*#__PURE__*/(() => {\n  class ContatosModalComponent extends BaseResourceFormComponent {\n    constructor(contatosService, injector, messageService, dialogService, ref) {\n      super(injector, new Contatos(), contatosService, Contatos.fromJson, new MessageService());\n      this.contatosService = contatosService;\n      this.injector = injector;\n      this.messageService = messageService;\n      this.dialogService = dialogService;\n      this.ref = ref;\n      this.tiposContatosList = [{\n        value: 'TR',\n        selected: false,\n        label: 'TELEFONE RESIDENCIAL'\n      }, {\n        value: 'CELULAR',\n        selected: false,\n        label: 'TELEFONE CELULAR'\n      }, {\n        value: 'WHATSUP',\n        selected: false,\n        label: 'WHATSUP'\n      }, {\n        value: 'EMAIL',\n        selected: false,\n        label: 'EMAIL'\n      }, {\n        value: 'RECADO',\n        selected: false,\n        label: 'TELEFONE PARA RECADO'\n      }, {\n        value: 'WEB',\n        selected: false,\n        label: 'PAGINA WEB'\n      }, {\n        value: 'FAX',\n        selected: false,\n        label: 'FAX'\n      }, {\n        value: 'OUTRO',\n        selected: false,\n        label: 'OUTRO'\n      }];\n      //Move os dados da pessoas para o modal de cadastro de enderecos\n      this.dadosPessoa = document.getElementById('nome').value + ' CPF: ' + document.getElementById('cpfCnpj').value;\n      this.env = environment;\n      this.contatoId = 0;\n      this.buildResourceForm(); /*limpa o formulario/resourceForm */\n      if (this.env.currentActionGlobal == \"DELETE\" || this.env.currentActionGlobal == \"EDIT\") {\n        this.env.botaoOnOf = true;\n      } else {\n        this.env.botaoOnOf = false;\n      }\n    }\n    buildResourceForm() {\n      this.resourceForm = this.formBuilder.group({\n        id: [null],\n        pessoa: [document.getElementById('id').value],\n        contato: [null, [Validators.required, Validators.minLength(5)]],\n        tipoContato: [null, [Validators.required]]\n      });\n    }\n    submitForm() {\n      //this.submittingForm = true;\n      if (this.env.currentActionGlobal === 'NEW') {\n        // clicou no + (novo)\n        this.createResource();\n      } else {\n        if (this.env.currentActionGlobal === 'EDIT') {\n          // clicou no update\n          this.updateResource();\n        } else {\n          // clicou no delete\n          this.deleteResource();\n        }\n      }\n    }\n    deleteResource() {\n      this.contatosService.deleteContato(this.contatoId).then(response => {\n        this.buildResourceForm(); /*limpa o formulario/resorceForm*/\n        this.ref.close();\n      });\n    }\n    updateResource() {\n      const resource = this.jsonDataToResourceFn(this.resourceForm.value);\n      // copia os dados de Contatos(classe) para contatos(variavel json)\n      let contatos = JSON.stringify(resource);\n      // Chama a funcao que faz update\n      this.contatosService.updateContato(contatos).then(response => {\n        this.buildResourceForm(); /*limpa o formulario/resorceForm*/\n        this.ref.close();\n      });\n    }\n    createResource() {\n      const resource = this.jsonDataToResourceFn(this.resourceForm.value);\n      // copia os dados de Contatos(classe) para contatos(variavel json)\n      let contatos = JSON.stringify(resource);\n      // Chama a funcao que insere\n      this.contatosService.createContato(contatos).then(response => {\n        this.buildResourceForm(); /*limpa o formulario/resorceForm*/\n        this.ref.close();\n      }).catch(error => {\n        console.log(error);\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Erro',\n          detail: error.error[0].mensagemUsuario\n        });\n      });\n    }\n    fecharModal() {\n      this.ref.close();\n    }\n    // No edit retorna os dados aqui.\n    ngOnInit() {\n      this.contatosService.contatosEditSubscribeId(resources => {\n        this.contatoId = resources.id;\n        //console.log(\"TIPO \", resources.tipoContato)\n        this.resourceForm.patchValue({\n          id: resources.id,\n          tipoContato: resources.tipoContato,\n          contato: resources.contato\n        });\n      });\n      if (this.env.currentActionGlobal === \"DELETE\") {\n        document.getElementById('tipoContatoDdw').disabled = true;\n        document.getElementById('contato').disabled = true;\n      }\n    }\n    static #_ = this.ɵfac = function ContatosModalComponent_Factory(t) {\n      return new (t || ContatosModalComponent)(i0.ɵɵdirectiveInject(i1.ContatosService), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i2.MessageService), i0.ɵɵdirectiveInject(i3.DialogService), i0.ɵɵdirectiveInject(i3.DynamicDialogRef));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ContatosModalComponent,\n      selectors: [[\"app-contatos-modal\"]],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 18,\n      vars: 9,\n      consts: [[3, \"header\"], [3, \"submit\", \"formGroup\"], [1, \"p-grid\", \"ui-fluid\", 2, \"margin-top\", \"5px\"], [1, \"p-col-12\", \"p-md-12\", \"p-lg-12\"], [\"for\", \"tipoContatoDdw\"], [\"id\", \"tipoContatoDdw\", \"name\", \"tipoContatoDdw\", \"placeholder\", \"Selecione\", \"formControlName\", \"tipoContato\", 3, \"options\", \"filter\", \"disabled\"], [\"header-colum\", \"Tipo Contato\", 3, \"form-control\"], [\"for\", \"contato\"], [\"id\", \"contato\", \"type\", \"text\", \"size\", \"10\", \"pInputText\", \"\", \"formControlName\", \"contato\"], [\"header-colum\", \"Contato\", 3, \"form-control\"], [1, \"p-col-12\", \"p-md-2\", \"p-lg-2\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Cancelar\", 1, \"ui-button-danger\", 3, \"click\"], [\"class\", \"p-col-12 p-md-2 p-lg-2\", 4, \"ngIf\"], [\"pButton\", \"\", \"type\", \"button\", \"type\", \"submit\", \"icon\", \"pi pi-check\", \"id\", \"btnSalvar\", \"value\", \"Salvar\", \"label\", \"Salvar\", 1, \"ui-button-success\", 3, \"disabled\"], [\"pButton\", \"\", \"type\", \"button\", \"type\", \"submit\", \"icon\", \"pi pi-check\", \"id\", \"btnSalvar\", \"value\", \"Salvar\", \"label\", \"Sim\", 1, \"ui-button-success\", 3, \"disabled\"]],\n      template: function ContatosModalComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p-panel\", 0)(1, \"form\", 1);\n          i0.ɵɵlistener(\"submit\", function ContatosModalComponent_Template_form_submit_1_listener() {\n            return ctx.submitForm();\n          });\n          i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"label\", 4);\n          i0.ɵɵtext(5, \"Tipo Contato\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"p-dropdown\", 5);\n          i0.ɵɵelement(7, \"app-form-field-error\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 7);\n          i0.ɵɵtext(10, \"Contato\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 8)(12, \"app-form-field-error\", 9);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"div\", 2)(14, \"div\", 10)(15, \"button\", 11);\n          i0.ɵɵlistener(\"click\", function ContatosModalComponent_Template_button_click_15_listener() {\n            return ctx.fecharModal();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(16, ContatosModalComponent_div_16_Template, 2, 1, \"div\", 12)(17, ContatosModalComponent_div_17_Template, 2, 1, \"div\", 12);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"header\", ctx.dadosPessoa);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"formGroup\", ctx.resourceForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"options\", ctx.tiposContatosList)(\"filter\", false)(\"disabled\", ctx.env.botaoOnOf);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"form-control\", ctx.resourceForm.get(\"tipoContato\"));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"form-control\", ctx.resourceForm.get(\"contato\"));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.env.currentActionGlobal != \"DELETE\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.env.currentActionGlobal === \"DELETE\");\n        }\n      },\n      dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, i6.FormFieldErrorComponent, i7.ButtonDirective, i8.InputText, i9.Panel, i10.Dropdown]\n    });\n  }\n  return ContatosModalComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}