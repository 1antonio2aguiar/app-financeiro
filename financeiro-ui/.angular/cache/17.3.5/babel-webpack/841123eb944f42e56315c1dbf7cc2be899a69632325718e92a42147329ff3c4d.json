{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { BaseResourceService } from './../../../shared/services/base-resource.service';\nimport { environment } from 'src/environments/environment';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Enderecos } from './../../../shared/models/enderecos';\nimport * as i0 from \"@angular/core\";\nexport let EnderecosService = /*#__PURE__*/(() => {\n  class EnderecosService extends BaseResourceService {\n    constructor(injector) {\n      super(environment.apiUrl + 'enderecos', injector, Enderecos.fromJson);\n      this.injector = injector;\n      this.header = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n      // Lista de enderecos por pessoa\n      this.enderecosEventHendler = new EventEmitter();\n      // Enderecos por id\n      this.enderecosEventHendlerId = new EventEmitter();\n    }\n    // Busca lista de enderecos por pessoa\n    listAll(pessoa) {\n      //console.log(\"ESTA NO SERVICE LIST ALL\")\n      return this.http.get(environment.apiUrl + 'enderecos/findByPessoaId?pessoaId=' + pessoa).toPromise().then(response => {\n        this.enderecosEventHendler.emit(response);\n      });\n    }\n    enderecosChangeSubscribe(callBack) {\n      this.enderecosEventHendler.subscribe(callBack);\n    }\n    // Busca endereco por ID\n    buscaEndereco(enderecoId) {\n      return this.http.get(this.apiPath + '/' + enderecoId).toPromise().then(response => {\n        this.enderecosEventHendlerId.emit(response);\n      });\n    }\n    buscaEnderecoId(enderecoId) {\n      return this.http.get(this.apiPath + '/' + enderecoId).toPromise();\n    }\n    enderecosEditSubscribeId(callBack) {\n      this.enderecosEventHendlerId.subscribe(callBack);\n    }\n    createEndereco(resource) {\n      return this.http.post(this.apiPath, resource, {\n        headers: this.header\n      }).toPromise().then(response => response);\n    }\n    updateEndereco(resource) {\n      //console.log(\"ID : \" + JSON.parse(resource).id);\n      //console.log(\"Endereco: \" + this.apiPath + '/' + JSON.parse(resource).id);\n      return this.http.put(this.apiPath + '/' + JSON.parse(resource).id, resource, {\n        headers: this.header\n      }).toPromise().then(response => response);\n    }\n    deleteEndereco(id) {\n      //console.log(\"ID : \" + id);\n      return this.http.delete(this.apiPath + '/' + id).toPromise().then(response => response);\n    }\n    static #_ = this.ɵfac = function EnderecosService_Factory(t) {\n      return new (t || EnderecosService)(i0.ɵɵinject(i0.Injector));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: EnderecosService,\n      factory: EnderecosService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return EnderecosService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}